@model FPCS.Web.Admin.Models.ExcursionType.ExcursionTypeEditModel

<div class="row-fluid">
    <div class="span12 ">
            <div class="row-fluid">
                <div class="span12 ">

                    @using (Html.BeginForm("_Edit", "ExcursionType", FormMethod.Post, new { id = "editExcursionTypeForm", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="control-group">
                            <div class="controls">
                                <h3 class="lighter block green">Редактирование данных о виде экскурсии</h3>
                            </div>
                        </div>

                        <div class="controls">
                            @Html.ValidationSummary(true)
                        </div>

                        @Html.HiddenFor(x => x.ExcursionTypeId);

                        <div class="control-group">
                            @Html.LabelFor(x => x.PathName, new { @class = "control-label" })
                            <div class="controls">
                                @Html.TextBoxFor(x => x.PathName, new { placeholder = Html.DisplayNameFor(x => x.PathName), @class = "span9" })
                                @Html.ValidationMessageFor(m => m.PathName)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(x => x.Description, new { @class = "control-label" })
                            <div class="controls">
                                @Html.TextAreaFor(x => x.Description, new { placeholder = Html.DisplayNameFor(x => x.Description), @class = "span9" })
                                @Html.ValidationMessageFor(m => m.Description)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(x => x.TimeFrom, new { @class = "control-label" })
                            <div class="controls">
                                @Html.DropDownListFor(x => x.TimeFrom, Model.Times, new { @class = "span9" })
                                @Html.ValidationMessageFor(m => m.TimeFrom)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(x => x.TimeTo, new { @class = "control-label" })
                            <div class="controls">
                                @Html.DropDownListFor(x => x.TimeFrom, Model.Times, new { @class = "span9" })
                                @Html.ValidationMessageFor(m => m.TimeTo)
                            </div>
                        </div>
                        <div class="control-group">
                            @Html.LabelFor(x => x.Price, new { @class = "control-label" })
                            <div class="controls">
                                @Html.TextBoxFor(x => x.Price, new { placeholder = Html.DisplayNameFor(x => x.Price), @class = "span9" })
                                @Html.ValidationMessageFor(m => m.Price)
                            </div>
                        </div>
                        <div class="form-actions">
                            <button class="btn btn-success editExcursionTypeSend" type="button">
                                <i class="icon-ok bigger-110"></i>
                                Сохранить сотрудника
                            </button>
                            <button onclick="javascript:fpcs.closeDialog()" class="btn btn-info" type="button">
                                <i class="icon-reply bigger-110"></i>
                                Отменить
                            </button>
                        </div>
                    }

                </div>
            </div>

    </div>

</div>

<script type="text/javascript">
    jQuery(function ($) {
        fpcs.initDatePicker();
    });
</script>
@Html.Script(Scripts.Render("~/bundles/jqueryval"))