@model FPCS.Web.Admin.Models.IncomingMessageJournal.IncomingMessageJournalEditModel
@using FPCS.Web.Admin.Models.IncomingMessageJournal;

@{
    ViewBag.Title = "Входящая заявка";
    ViewBag.Header = "Входящая заявка";
}


<div class="row-fluid">
    <div class="span12 ">

        @using (Html.BeginForm("_Edit", "IncomingMessageJournal", FormMethod.Post, new { id = "editIncomingMessageJournalForm", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            <div class="control-group">
                <div class="controls">
                    <h3 class="lighter block green">Редактирование заявки</h3>
                </div>
            </div>

            @Html.HiddenFor(x => x.IncomingMessageJournalId, new { id = "incomingMessageJournalId" })

            <div class="controls">
                @Html.ValidationSummary(true)
            </div>
            @Html.Partial("_JournalPersonsPartial", new JournalPersonsModel
       {
           Persons = Model.Persons,
           JournalPersons = Model.JournalPersons
       })
            <div class="control-group">
                @Html.LabelFor(x => x.Date, new { @class = "control-label" })
                <div class="controls ">
                    <div class="row-fluid input-append">
                        @Html.TextBoxFor(x => x.Date, "{0:dd.MM.yyyy}", new { placeholder = Html.DisplayNameFor(x => x.Date), @class = "span3 date-picker", data_date_format = "dd.MM.yyyy" })
                        <span class="add-on">
                            <i class="icon-calendar"></i>
                        </span>
                        @Html.ValidationMessageFor(m => m.Date)
                    </div>
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(x => x.RequestContent, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextAreaFor(x => x.RequestContent, new { placeholder = Html.DisplayNameFor(x => x.RequestContent), @class = "span6" })
                    @Html.ValidationMessageFor(m => m.RequestContent)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.AcceptedById, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(x => x.AcceptedById, Model.AcceptedsByWorkers, new { @class = "span6" })
                    @Html.ValidationMessageFor(m => m.AcceptedById)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.ResponsibleId, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(x => x.ResponsibleId, Model.ResponsibleWorkers, new { @class = "span6" })
                    @Html.ValidationMessageFor(m => m.ResponsibleId)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.IncomingSource, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(x => x.IncomingSource, Model.IncomingSources, new { @class = "span9" })
                    @Html.ValidationMessageFor(m => m.IncomingSource)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.Result, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextAreaFor(x => x.Result, new { placeholder = Html.DisplayNameFor(x => x.Result), @class = "span6" })
                    @Html.ValidationMessageFor(m => m.Result)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.SourceInfo, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(x => x.SourceInfo, Model.SourceInfos, new { @class = "span9" })
                    @Html.ValidationMessageFor(m => m.SourceInfo)
                </div>
            </div>
            <div class="form-actions">
                <button onclick="javascript: $('#editIncomingMessageJournalForm').submit()" class="btn btn-success" type="button">
                    <i class="icon-ok bigger-110"></i>
                    Сохранить
                </button>
                <button onclick="javascript:location.href='@Url.Action("Index")'" class="btn btn-info" type="button">
                    <i class="icon-reply bigger-110"></i>
                    Отменить
                </button>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqGrid")

    <script type="text/javascript">
        jQuery(function ($) {
            //incomingMessageJournal.initIndexPage();
            incomingMessageJournal.initJouranlCreateEditPages();
        });
    </script>
}
